/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.app.coffee.Login.LoginAccount;

import com.app.coffee.Login.CustomDialog;
import com.app.coffee.Login.LoginAccount.Reset;
import com.app.coffee.virtualKeyBoard.LetterVirtualKeyBoard;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JSeparator;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
/**
 *
 * @author Admin
 */
public class SendAdmin extends javax.swing.JPanel {
    int randomCode;
    private VerifyAdmin verifyCodeAmdmin;
    private Timer timer;
    boolean isCodeValid = false;
    private String email;
    private LetterVirtualKeyBoard virtualKeyboard;
    private JDialog keyboardDialog;
    
    /**
     * Creates new form SendAdmin
     */
    public SendAdmin() {
        initComponents();
        virtualKeyboard = new LetterVirtualKeyBoard();
        keyboardDialog = new JDialog((java.awt.Frame) SwingUtilities.getWindowAncestor(this), "Virtual Keyboard", true);
        keyboardDialog.add(virtualKeyboard);
        keyboardDialog.pack();
        keyboardDialog.setLocationRelativeTo(null);
        
        EnterEmail.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                showVirtualKeyboard(EnterEmail);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        EnterEmail = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(243, 114, 44)));
        jPanel3.setForeground(new java.awt.Color(51, 255, 51));
        jPanel3.setPreferredSize(new java.awt.Dimension(430, 320));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(73, 80, 87));
        jLabel3.setText("Register Admin");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(73, 80, 87));
        jLabel5.setText("Email :");

        EnterEmail.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        EnterEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterEmailActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(243, 114, 44));
        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1SendEmail(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(EnterEmail)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(118, 118, 118))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addGap(33, 33, 33)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(EnterEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void EnterEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EnterEmailActionPerformed

    private void jButton1SendEmail(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1SendEmail
        // TODO add your handling code here:
         try {
            String email = EnterEmail.getText();
            if (email.isEmpty()) {
                new CustomDialog(null, "Error", "Email field is empty.");
                return;
            }                        
            
            Random rand = new Random();
            randomCode = rand.nextInt(999999);

            String host = "smtp.gmail.com";
            String user = "tainhokhem48@gmail.com";
            String pass = "kqmr stcs skwv mmmr";
            String to = email;
            String subject = "Reseting Code";
            String message = "Your reset code is " + randomCode;
            boolean sessionDebug = false;

            Properties props = System.getProperties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.required", "true");

            Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(user, pass);
                }
            });

            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(user));
            InternetAddress[] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(subject);
            msg.setSentDate(new java.util.Date());
            msg.setText(message);

            Transport transport = mailSession.getTransport("smtp");
            transport.connect(host, user, pass);
            transport.sendMessage(msg, msg.getAllRecipients());
            transport.close();
            
            isCodeValid = true;
            startTimer();           
            if (verifyCodeAmdmin == null) {
                verifyCodeAmdmin = new VerifyAdmin(randomCode, email);
                setVerifyCodeAdmin(verifyCodeAmdmin);
                } else {
                    verifyCodeAmdmin.updateSeconds(randomCode, email);
                }

            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            frame.setContentPane(verifyCodeAmdmin);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
            } else {
                new CustomDialog(null, "Error", "Didn't find the parent window to show the VerifyCode panel.");
            }
        } catch (MessagingException e) {
            e.printStackTrace();
            new CustomDialog(null, "Error", "Email error: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1SendEmail
 
     public VerifyAdmin getVerifyCodeAdmin() {
        return verifyCodeAmdmin;
    }

    public void setVerifyCodeAdmin(VerifyAdmin verifyCodeAmdmin) {
        this.verifyCodeAmdmin = verifyCodeAmdmin;
    }

    public void sendMail(String email, int randomCode) {
        
        try {
            String host = "smtp.gmail.com";
            String user = "tainhokhem48@gmail.com";
            String pass = "kqmr stcs skwv mmmr";
            String to = email;
            String subject = "Reseting Code";
            String message = "Your reset code is " + randomCode;
            boolean sessionDebug = false;

            Properties props = System.getProperties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.required", "true");

            Session mailSession = Session.getInstance(props, new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(user, pass);
                }
            });

            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(user));
            InternetAddress[] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(subject);
            msg.setSentDate(new java.util.Date());
            msg.setText(message);

            Transport transport = mailSession.getTransport("smtp");
            transport.connect(host, user, pass);
            transport.sendMessage(msg, msg.getAllRecipients());
            transport.close();
        } catch (Exception e) {
            e.printStackTrace();
            new CustomDialog(null, "Error", "Failed to send email.");
        }
    }

    public void startTimer() {
        int countdownTime = 60;
        timer = new Timer(1000, new ActionListener() {
            int timeRemaining = countdownTime;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (timeRemaining > 0) {
                    timeRemaining--;
                    SwingUtilities.invokeLater(() -> {
                        if (verifyCodeAmdmin != null) {
                            verifyCodeAmdmin.updateSeconds(timeRemaining, email);
                        }
                    });
                } else {
                    timer.stop();
                    isCodeValid = false;
                }
            }
        });
        timer.start();
    }
    
    private void showVirtualKeyboard(JTextField textField) {
        virtualKeyboard.setText(textField.getText());
        virtualKeyboard.setTitle("Virtual Keyboard");
        keyboardDialog.setVisible(true);
        textField.setText(virtualKeyboard.getSavedText());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EnterEmail;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
